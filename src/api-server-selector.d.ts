/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   src/api-server-selector.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {html, LitElement, css} from 'lit-element';

import {AmfHelperMixin} from '@api-components/amf-helper-mixin/amf-helper-mixin.js';

import {EventsTargetMixin} from '@advanced-rest-client/events-target-mixin/events-target-mixin.js';

export {ApiServerSelector};

declare namespace ApiElements {

  /**
   * `api-server-selector`
   * An element to generate view model for server
   * elements from AMF model
   *
   * This component receives an AMF model, and listens
   * to navigation events to know which node's servers
   * it should render.
   *
   * When the selected server changes, it dispatches an `api-server-changed`
   * event, with the following details:
   * - Server value: the server id (for listed servers in the model), the URI
   *    value (when custom URI is selected), or the value of the `anypoint-item`
   *    component rendered into the extra slot
   * - Selected type: `server` | `custom` | `extra`
   *    - `server`: server from the AMF model
   *    - `custom`: custom URI input change
   *    - `extra`: extra slot's anypoint-item `value` attribute (see below)
   *
   * Adding extra slot:
   * This component renders a `slot` element to render anything the users wants
   * to add in there. To enable this, sit the `extraOptions` value in this component
   * to true, and render an element associated to the slot name `custom-base-uri`.
   * The items rendered in this slot should be `anypoint-item` components, and have a
   * `value` attribute. This is the value that will be dispatched in the `api-server-changed`
   * event.
   */
  class ApiServerSelector extends
    AmfHelperMixin(
    EventTargetMixin(
    Object)) {

    /**
     * AMF model to be rendered
     */
    amf: object|null|undefined;
    readonly styles: any;
    servers: any;
    readonly selected: any;

    /**
     * The baseUri to override any server definition
     */
    baseUri: string|null|undefined;
    methodId: any;
    endpointId: any;
    uri: any;
    selectedType: any;

    /**
     * If activated, `Custom URI` will not be in the dropdown options
     */
    hideCustom: boolean|null|undefined;

    /**
     * Holds the current servers to show in in the dropdown menu
     */
    _servers: any[]|null|undefined;
    _selectedIndex: number|null|undefined;
    _selectedValue: string|null|undefined;
    _selectedType: string|null|undefined;
    _endpointId: string|null|undefined;
    _methodId: string|null|undefined;
    _uri: string|null|undefined;
    handleNavigationChange(e: any): void;
    _checkForSelectedChange(oldServers: any): void;

    /**
     * Search for a server in a list of search, comparing against AMF id
     *
     * @param serverId The desired server to search for
     * @param servers The list of AMF server models to search in,
     * @returns The index of the server, or -1 if not found
     */
    _getIndexOfServer(serverId: String|null, servers: any[]|null): Number|null;
    _getServerValue(server: any): any;

    /**
     * Update component's servers
     */
    updateServers({
  id,
  type,
  endpointId
}: any): void;

    /**
     * Handler for the listbox's change event
     */
    handleSelectionChanged(e: CustomEvent|null): void;
    _changeSelected({
  selectedIndex,
  selectedValue
}: any): void;
    _setUri({
  selectedIndex,
  selectedValue,
  selectedType
}: any): void;

    /**
     * Retrieves custom base uris nodes assigned to the
     * custom-base-uri slot
     *
     * @returns Nodes assigned to custom-base-uri slot
     */
    _getExtraServers(): any[]|null;

    /**
     * Retrieves custom base uri option's index
     *
     * @returns custom base uri option's index
     */
    _getCustomUriIndex(): Number|null;
    _getSelectedType(selectedIndex: any): any;

    /**
     * Call the render functions for
     * - Server options (from AMF Model)
     * - Custom URI option
     * - Extra slot
     *
     * @returns The combination of all options
     */
    renderItems(): TemplateResult|null;
    _getServerUri(server: any): any;
    renderServerOptions(): any;

    /**
     * @returns Custom URI `anypoint-item`
     */
    renderCustomURIOption(): TemplateResult|null;

    /**
     * Returns template result with `slot` element
     */
    renderExtraSlot(): TemplateResult|null;
    _handleUriChange(event: any): void;
    _resetSelection(): void;
    _renderUriInput(): any;
    _renderDropdown(): any;
    render(): any;
    _attachListeners(node: any): void;
    _detachListeners(node: any): void;
  }
}
