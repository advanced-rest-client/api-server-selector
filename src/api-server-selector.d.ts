/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   src/api-server-selector.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {html, LitElement, css} from 'lit-element';

import {AmfHelperMixin} from '@api-components/amf-helper-mixin/amf-helper-mixin.js';

import {EventsTargetMixin} from '@advanced-rest-client/events-target-mixin/events-target-mixin.js';

export {ApiServerSelector};

/**
 * `api-server-selector`
 * An element to generate view model for server
 * elements from AMF model
 *
 * This component receives an AMF model, and listens
 * to navigation events to know which node's servers
 * it should render.
 *
 * When the selected server changes, it dispatches an `api-server-changed`
 * event, with the following details:
 * - Server value: the server id (for listed servers in the model), the URI
 *    value (when custom base URI is selected), or the value of the `anypoint-item`
 *    component rendered into the extra slot
 * - Selected type: `server` | `custom` | `extra`
 *    - `server`: server from the AMF model
 *    - `custom`: custom base URI input change
 *    - `extra`: extra slot's anypoint-item `value` attribute (see below)
 *
 * Adding extra slot:
 * This component renders a `slot` element to render anything the users wants
 * to add in there. To enable this, sit the `extraOptions` value in this component
 * to true, and render an element associated to the slot name `custom-base-uri`.
 * The items rendered in this slot should be `anypoint-item` components, and have a
 * `value` attribute. This is the value that will be dispatched in the `api-server-changed`
 * event.
 */
declare class ApiServerSelector extends
  AmfHelperMixin(
  EventTargetMixin(
  LitElement)) {
  amf: any;
  readonly styles: any;

  /**
   * Holds the current servers to show in in the dropdown menu
   */
  servers: any[]|null|undefined;
  readonly selected: any;

  /**
   * If activated, `Custom base URI` will be in the dropdown options
   */
  allowCustom: boolean|null|undefined;

  /**
   * The baseUri to override any server definition
   */
  baseUri: string|null|undefined;

  /**
   * Current value of the server
   * Always a URI value
   */
  selectedValue: string|null|undefined;

  /**
   * The currently selected operation in the AMF model.
   */
  methodId: string|null|undefined;

  /**
   * The currently selected endpoint in the AMF model.
   */
  endpointId: string|null|undefined;
  readonly isCustom: Boolean|null;

  /**
   * Currently selected type of an base URI.
   * `server` | `slot` | `custom`
   */
  selectedType: string|null|undefined;

  /**
   * Current selected server index
   */
  _selectedIndex: number|null|undefined;

  /**
   * If activated, server selector will not be visible
   */
  hidden: boolean|null|undefined;

  /**
   * Enables outlined material theme
   */
  outlined: boolean|null|undefined;

  /**
   * Enables compatybility with the anypoint platform
   */
  compatibility: boolean|null|undefined;
  constructor();
  firstUpdated(): void;
  render(): any;
  _attachListeners(node: any): void;
  _detachListeners(node: any): void;
  _notifyServersCount(): void;
  _isValueValid(value: any): any;
  _findServerByValue(value: any): any;
  _findServerById(id: any): any;
  _getIndexForSlotValue(value: any): any;
  _getIndexForValue(value: any): any;
  _handleNavigationChange(e: any): void;
  _checkForSelectedChange(oldServers: any): void;
  _getIndexOfServerByUri(value: any, servers: any): any;

  /**
   * Search for a server in a list of search, comparing against AMF id
   *
   * @param serverId The desired server to search for
   * @param servers The list of AMF server models to search in,
   * @returns The index of the server, or -1 if not found
   */
  _getIndexOfServer(serverId: String|null, servers: any[]|null): Number|null;
  _getServerValue(server: any): any;

  /**
   * Update component's servers
   */
  updateServers({
  id,
  type,
  endpointId
} = {}: any): void;

  /**
   * Handler for the listbox's change event
   */
  _handleSelectionChanged(e: CustomEvent|null): void;
  _isServerIndex(index: any): any;
  _isCustomIndex(index: any): any;
  _changeSelected({
  selectedIndex,
  selectedValue
} = {}: any): void;

  /**
   * Retrieves custom base uris elements assigned to the
   * custom-base-uri slot
   *
   * @returns Elements assigned to custom-base-uri slot
   */
  _getExtraServers(): any[]|null;

  /**
   * Retrieves the total amount of servers being rendered, without counting customServer
   *
   * @returns total amount of servers being rendered
   */
  _getServersCount(): Number|null;
  _getSelectedType(selectedIndex: any): any;
  _handleUriChange(event: any): void;
  _resetSelection(): void;

  /**
   * Call the render functions for
   * - Server options (from AMF Model)
   * - Custom URI option
   * - Extra slot
   *
   * @returns The combination of all options
   */
  _renderItems(): TemplateResult|null;

  /**
   * @returns Custom URI `anypoint-item`
   */
  _renderCustomURIOption(): TemplateResult|null;
  _getServerUri(server: any): any;
  _renderServerOptions(): any;

  /**
   * Returns template result with `slot` element
   */
  _renderExtraSlot(): TemplateResult|null;
  _renderUriInput(): any;
  _renderDropdown(): any;
}
